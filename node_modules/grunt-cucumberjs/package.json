{
  "name": "grunt-cucumberjs",
  "description": "Generates documentation from Cucumber features",
  "version": "0.3.0",
  "homepage": "https://github.com/mavdi/grunt-cucumberjs",
  "author": {
    "name": "Mehdi Avdi",
    "email": "mehdi.avdi@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mavdi/grunt-cucumberjs.git"
  },
  "contributors": [
    {
      "name": "Andrew Keig",
      "email": "andrew.keig@gmail.com",
      "url": "https://github.com/AndrewKeig"
    },
    {
      "name": "Jozz Hart",
      "email": "me@jozzhart.com",
      "url": "http://jozzhart.com"
    }
  ],
  "bugs": {
    "url": "https://github.com/mavdi/grunt-cucumberjs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mavdi/grunt-cucumberjs/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "cucumber": "~0.3.1",
    "handlebars": "~1.0.12",
    "underscore": "~1.5.2"
  },
  "readme": "# grunt-cucumberjs\n\n> Runs cucumberjs features and output results in various formats including html.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-cucumberjs --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-cucumberjs');\n```\n\n## The \"cucumberjs\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `cucumberjs` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  cucumberjs: {\n    options: {\n      format: 'html',\n      output: 'my_report.html',\n      theme: 'bootstrap'\n    },\n    my_features: ['features/feature1.feature', 'features/feature2.feature'],\n    other_features: {\n      options: {\n        output: 'other_report.html'\n      },\n      src: ['other_features/feature1.feature', 'other_features/feature2.feature']\n    }\n  }\n});\n```\n\n### Usage\n```bash\n#runs all features specified in task\n$ grunt cucumberjs \n\n#run specific features\n$ grunt cucumberjs --features=features/myFeature.feature \n```\n\n### Options\n\n#### options.steps\nType: `String`\nDefault: `''`\n\npasses the value as ```--steps``` parameter to cucumber.\n\n#### options.tags\nType: `String`\nDefault: `''`\n\npasses the value as ```--tags``` parameter to cucumber.\n\n#### options.theme\nType: `String`\nDefault: `'foundation'`\nAvailable: `['foundation', 'bootstrap', 'simple']`\n\nSpecifies which theme to use for the html report\n\n#### options.templateDir\nType: `String`\nDefault: `'features/templates'`\n\nLocation of your custom templates. Simply name the template the same as the one you are trying to override and \ngrunt-cucumberjs will use it over the default template\n\n#### options.output\nType: `String`\nDefault: `'features_report.html'`\n\nReport output location. Please also include the appropriate extension. For example use ```js``` for ```json``` format.\n\n#### options.format\nType: `String`\nDefault: `'html'`\nAvailable: `['pretty', 'progress', 'json', 'summary', 'html']`\n\nThe output format for the tests. \n",
  "readmeFilename": "README.md",
  "_id": "grunt-cucumberjs@0.3.0",
  "_shasum": "041965d7b47c159d4e0a04765e39515e3cdb67b9",
  "_from": "grunt-cucumberjs@^0.3.0",
  "_resolved": "https://registry.npmjs.org/grunt-cucumberjs/-/grunt-cucumberjs-0.3.0.tgz"
}
